# List of commands that will be run before `setup_commands`. If docker is
# enabled, these commands will run outside the container and before docker
# is setup.
initialization_commands: []

# Docker configurations
docker:
    # Initialization commands running on host for only docker enabled
    initialization_commands:
        - which docker >/dev/null 2>&1 || (curl -fsSL https://get.docker.com -o /tmp/get-docker.sh && sed -i "s/set -x/set +x/g" /tmp/get-docker.sh &&
          ((export VERSION=20.10 && sudo --preserve-env=VERSION bash /tmp/get-docker.sh >/dev/null) || sudo bash /tmp/get-docker.sh >/dev/null) && sudo usermod -aG docker $USER && sudo systemctl restart docker -f)
        - docker ps -a >/dev/null 2>&1 || (sudo addgroup --system docker && sudo usermod -aG docker $USER && sudo systemctl restart docker -f)
        - which jq >/dev/null 2>&1 || (sudo apt-get -qq update -y && sudo apt-get -qq install -y jq >/dev/null)
    head_initialization_commands:
        - docker pull registry:2
        - "(stat /etc/docker/daemon.json >/dev/null 2>&1 && jq '. + { \"registry-mirrors\": [$address] }' --arg address \"http://${CLOUDTIK_NODE_IP}:5000\" /etc/docker/daemon.json > /tmp/tmp.$$.json && sudo mv /tmp/tmp.$$.json /etc/docker/daemon.json) || (sudo mkdir -p /etc/docker && printf \"{\n  \\\"registry-mirrors\\\": [\\\"http://${CLOUDTIK_NODE_IP}:5000\\\"]\n}\" | sudo tee -a /etc/docker/daemon.json >/dev/null 2>&1) && sudo systemctl restart docker -f"
        - (docker container stop cloudtik-registry >/dev/null 2>&1; docker container rm -v cloudtik-registry >/dev/null 2>&1) || true
        - (docker run -d -e REGISTRY_PROXY_REMOTEURL="https://registry-1.docker.io" -p 5000:5000 --restart=always --name cloudtik-registry registry:2) || true
    worker_initialization_commands:
        - "(stat /etc/docker/daemon.json >/dev/null 2>&1 && jq '. + { \"registry-mirrors\": [$address] }' --arg address \"http://${CLOUDTIK_HEAD_IP}:5000\" /etc/docker/daemon.json > /tmp/tmp.$$.json && sudo mv /tmp/tmp.$$.json /etc/docker/daemon.json) || (sudo mkdir -p /etc/docker && printf \"{\n  \\\"registry-mirrors\\\": [\\\"http://${CLOUDTIK_HEAD_IP}:5000\\\"]\n}\" | sudo tee -a /etc/docker/daemon.json >/dev/null 2>&1) && sudo systemctl restart docker -f"

# List of shell commands to run to set up nodes.
setup_commands:
    - (arch=$(uname -m) && [ "${arch}" == "aarch64" ] && (which gcc >/dev/null || (sudo apt-get -qq update -y && sudo apt-get -qq install -y gcc >/dev/null))) || true
    - >-
        which conda >/dev/null 2>&1 || (arch=$(uname -m) && wget -q --show-progress "https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-${arch}.sh" -O /tmp/miniconda.sh &&
        /bin/bash /tmp/miniconda.sh -b -u -p ~/anaconda3 && ~/anaconda3/bin/conda init && rm -rf /tmp/miniconda.sh)
    - ((! grep -Fxq 'export CONDA_ROOT=$HOME/anaconda3' ~/.bashrc) &&
        echo 'export CONDA_ROOT=$HOME/anaconda3' >> ~/.bashrc) || true
    - ((! grep -Fxq 'export CLOUDTIK_ENV=cloudtik' ~/.bashrc) &&
        echo 'export CLOUDTIK_ENV=cloudtik' >> ~/.bashrc) || true
    - conda activate ${CLOUDTIK_ENV} || conda create -n ${CLOUDTIK_ENV} -y libffi=3.3 python=${CLOUDTIK_PYTHON_VERSION}
    - (stat $HOME/anaconda3/envs/${CLOUDTIK_ENV}/ >/dev/null 2>&1 &&
        (! grep -Fxq 'export PATH=$HOME/anaconda3/envs/${CLOUDTIK_ENV}/bin:$PATH' ~/.bashrc) &&
        echo 'export PATH=$HOME/anaconda3/envs/${CLOUDTIK_ENV}/bin:$PATH' >> ~/.bashrc) || true
    - (stat $HOME/anaconda3/envs/${CLOUDTIK_ENV}/ >/dev/null 2>&1 &&
        (! grep -Fxq 'source ${CONDA_ROOT}/bin/activate ${CLOUDTIK_ENV}' ~/.bashrc) &&
        echo 'source ${CONDA_ROOT}/bin/activate ${CLOUDTIK_ENV}' >> ~/.bashrc) || true

# CloudTik built-in start or stop commands will be added to the list automatically
# Command to start on the head node. You don't need to change this.
head_start_commands: []

# Command to start on worker nodes. You don't need to change this.
worker_start_commands: []

# Command to start on the head node. You don't need to change this.
head_stop_commands: []

# Command to start on worker nodes. You don't need to change this.
worker_stop_commands: []

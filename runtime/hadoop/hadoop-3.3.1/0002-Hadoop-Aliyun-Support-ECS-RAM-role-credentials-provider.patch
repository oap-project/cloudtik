From 6842832feca2a2d28bb2f435a9de7f13ad9e1a29 Mon Sep 17 00:00:00 2001
From: Chen Haifeng <haifeng.chen@intel.com>
Date: Thu, 16 Feb 2023 08:00:08 +0000
Subject: [PATCH] Hadoop Aliyun Support: ECS RAM role credentials provider
 support

---
 .../AliyunEcsRamRoleCredentialsProvider.java  | 65 +++++++++++++++++++
 .../hadoop/fs/aliyun/oss/Constants.java       |  3 +
 2 files changed, 68 insertions(+)
 create mode 100644 hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunEcsRamRoleCredentialsProvider.java

diff --git a/hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunEcsRamRoleCredentialsProvider.java b/hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunEcsRamRoleCredentialsProvider.java
new file mode 100644
index 00000000000..3bbcaa0571f
--- /dev/null
+++ b/hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunEcsRamRoleCredentialsProvider.java
@@ -0,0 +1,65 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.fs.aliyun.oss;
+
+import java.net.URI;
+
+import com.aliyun.oss.common.auth.Credentials;
+import com.aliyun.oss.common.auth.CredentialsProvider;
+import com.aliyun.oss.common.auth.InstanceProfileCredentialsProvider;
+import com.aliyun.oss.common.auth.InvalidCredentialsException;
+import org.apache.commons.lang3.StringUtils;
+import org.apache.hadoop.conf.Configuration;
+
+import java.io.IOException;
+
+import static org.apache.hadoop.fs.aliyun.oss.Constants.*;
+
+/**
+ * Support ECS instance RAM role authenticating with Aliyun.
+ */
+public class AliyunEcsRamRoleCredentialsProvider implements CredentialsProvider {
+  private InstanceProfileCredentialsProvider credentials_provider = null;
+
+  public AliyunEcsRamRoleCredentialsProvider(URI uri, Configuration conf) throws IOException {
+    String roleName;
+    try {
+      roleName = AliyunOSSUtils.getValueWithKey(conf, ECS_RAM_ROLE_NAME);
+    } catch (IOException e) {
+      throw new InvalidCredentialsException(e);
+    }
+
+    if (StringUtils.isEmpty(roleName)) {
+      throw new InvalidCredentialsException(
+          "RoleName should not be null or empty.");
+    }
+
+    credentials_provider = new InstanceProfileCredentialsProvider(roleName);
+  }
+
+  @Override
+  public void setCredentials(Credentials creds) {
+    credentials_provider.setCredentials(creds);
+  }
+
+  @Override
+  public Credentials getCredentials() {
+    return credentials_provider.getCredentials();
+  }
+}
diff --git a/hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/Constants.java b/hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/Constants.java
index 71693d05703..d4b309d0092 100644
--- a/hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/Constants.java
+++ b/hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/Constants.java
@@ -44,6 +44,9 @@ private Constants() {
   public static final String ACCESS_KEY_SECRET = "fs.oss.accessKeySecret";
   public static final String SECURITY_TOKEN = "fs.oss.securityToken";
 
+  // ECS instance RAM role authentication
+  public static final String ECS_RAM_ROLE_NAME = "fs.oss.ecs.ramRoleName";
+
   // Number of simultaneous connections to oss
   public static final String MAXIMUM_CONNECTIONS_KEY =
       "fs.oss.connection.maximum";
-- 
2.25.1


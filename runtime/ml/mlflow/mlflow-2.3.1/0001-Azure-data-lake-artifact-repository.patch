From 38d845f38e59775fd0c37cdd4e7f558c892a05ba Mon Sep 17 00:00:00 2001
From: Chen Haifeng <haifeng.chen@intel.com>
Date: Sat, 6 May 2023 12:13:22 +0800
Subject: [PATCH] Azure data lake artifact repository

---
 .../artifact/artifact_repository_registry.py  |  2 ++
 .../artifact/azure_blob_artifact_repo.py      | 25 +++++++++++++-
 .../artifact/azure_data_lake_artifact_repo.py | 34 ++++++++++++++++++-
 3 files changed, 59 insertions(+), 2 deletions(-)

diff --git a/mlflow/store/artifact/artifact_repository_registry.py b/mlflow/store/artifact/artifact_repository_registry.py
index 5e583ea0a..495ee222d 100644
--- a/mlflow/store/artifact/artifact_repository_registry.py
+++ b/mlflow/store/artifact/artifact_repository_registry.py
@@ -3,6 +3,7 @@ import warnings
 
 from mlflow.exceptions import MlflowException
 from mlflow.store.artifact.azure_blob_artifact_repo import AzureBlobArtifactRepository
+from mlflow.store.artifact.azure_data_lake_artifact_repo import AzureDataLakeArtifactRepository
 from mlflow.store.artifact.dbfs_artifact_repo import dbfs_artifact_repo_factory
 from mlflow.store.artifact.ftp_artifact_repo import FTPArtifactRepository
 from mlflow.store.artifact.gcs_artifact_repo import GCSArtifactRepository
@@ -79,6 +80,7 @@ _artifact_repository_registry.register("file", LocalArtifactRepository)
 _artifact_repository_registry.register("s3", S3ArtifactRepository)
 _artifact_repository_registry.register("gs", GCSArtifactRepository)
 _artifact_repository_registry.register("wasbs", AzureBlobArtifactRepository)
+_artifact_repository_registry.register("abfss", AzureDataLakeArtifactRepository)
 _artifact_repository_registry.register("ftp", FTPArtifactRepository)
 _artifact_repository_registry.register("sftp", SFTPArtifactRepository)
 _artifact_repository_registry.register("dbfs", dbfs_artifact_repo_factory)
diff --git a/mlflow/store/artifact/azure_blob_artifact_repo.py b/mlflow/store/artifact/azure_blob_artifact_repo.py
index b78c34f2e..c6dbf00e9 100644
--- a/mlflow/store/artifact/azure_blob_artifact_repo.py
+++ b/mlflow/store/artifact/azure_blob_artifact_repo.py
@@ -59,12 +59,35 @@ class AzureBlobArtifactRepository(ArtifactRepository):
                 ) from exc
 
             account_url = f"https://{account}.{api_uri_suffix}"
+
+            # CloudTik: patch start
+            managed_identity_client_id = self._get_azure_managed_identity_client_id()
+            if managed_identity_client_id:
+                credential = DefaultAzureCredential(
+                    managed_identity_client_id=managed_identity_client_id)
+            else:
+                credential = DefaultAzureCredential()
+            # CloudTik: patch end
+
             self.client = BlobServiceClient(
                 account_url=account_url,
-                credential=DefaultAzureCredential(),
+                credential=credential,
                 connection_verify=_get_default_host_creds(artifact_uri).verify,
             )
 
+    # CloudTik: patch start
+    @staticmethod
+    def _get_azure_managed_identity_client_id():
+        filename = os.path.expanduser("~/azure_managed_identity.config")
+        if os.path.isfile(filename):
+            with open(filename, 'r') as f:
+                client_id = f.readline()
+                if client_id is not None:
+                    client_id = client_id.strip()
+                return client_id
+        return None
+    # CloudTik: patch end
+
     @staticmethod
     def parse_wasbs_uri(uri):
         """Parse a wasbs:// URI, returning (container, storage_account, path, api_uri_suffix)."""
diff --git a/mlflow/store/artifact/azure_data_lake_artifact_repo.py b/mlflow/store/artifact/azure_data_lake_artifact_repo.py
index e42130f73..fac1614c7 100644
--- a/mlflow/store/artifact/azure_data_lake_artifact_repo.py
+++ b/mlflow/store/artifact/azure_data_lake_artifact_repo.py
@@ -58,7 +58,7 @@ class AzureDataLakeArtifactRepository(ArtifactRepository):
                        to use to authenticate to storage
     """
 
-    def __init__(self, artifact_uri, credential):
+    def __init__(self, artifact_uri, credential=None):
         super().__init__(artifact_uri)
         _DEFAULT_TIMEOUT = 600  # 10 minutes
         self.write_timeout = MLFLOW_ARTIFACT_UPLOAD_DOWNLOAD_TIMEOUT.get() or _DEFAULT_TIMEOUT
@@ -66,10 +66,42 @@ class AzureDataLakeArtifactRepository(ArtifactRepository):
         (filesystem, account_name, path) = _parse_abfss_uri(artifact_uri)
 
         account_url = f"https://{account_name}.dfs.core.windows.net"
+
+        # CloudTik: patch start
+        if credential is None:
+            try:
+                from azure.identity import DefaultAzureCredential
+            except ImportError as exc:
+                raise ImportError(
+                    "Using DefaultAzureCredential requires the azure-identity package. "
+                    "Please install it via: pip install azure-identity"
+                ) from exc
+
+            managed_identity_client_id = self._get_azure_managed_identity_client_id()
+            if managed_identity_client_id:
+                credential = DefaultAzureCredential(
+                    managed_identity_client_id=managed_identity_client_id)
+            else:
+                credential = DefaultAzureCredential()
+        # CloudTik: patch end
+
         data_lake_client = _get_data_lake_client(account_url=account_url, credential=credential)
         self.fs_client = data_lake_client.get_file_system_client(filesystem)
         self.base_data_lake_directory = path
 
+    # CloudTik: patch start
+    @staticmethod
+    def _get_azure_managed_identity_client_id():
+        filename = os.path.expanduser("~/azure_managed_identity.config")
+        if os.path.isfile(filename):
+            with open(filename, 'r') as f:
+                client_id = f.readline()
+                if client_id is not None:
+                    client_id = client_id.strip()
+                return client_id
+        return None
+    # CloudTik: patch end
+
     def log_artifact(self, local_file, artifact_path=None):
         raise NotImplementedError(
             "This artifact repository does not support logging single artifacts"
-- 
2.39.1.windows.1

